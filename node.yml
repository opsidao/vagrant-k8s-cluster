---

- name: Install Python2
  hosts: all
  become: true
  become_user: root
  gather_facts: no

  tasks:
  - name: 'install python2'
    raw: sudo apt-get -y install python


- name: Install common dependencies
  hosts: all
  become: true
  become_user: root

  vars:
    apt_dependencies:
    - apt-transport-https
    - cowsay
    - curl
    - docker.io
    - kubeadm
    - kubectl
    - kubelet

  tasks:
  - name: Add apt key for the kubernetes repository
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      id: BA07F4FB

  - name: Add kubernetes repository to sources.list.d
    apt_repository:
      repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
      update_cache: true

  - name: Install dependencies
    apt:
      name: "{{ apt_dependencies }}"

- name: Configure bash completion for kubectl
  hosts: master

  tasks:
  - name: Create directory for kubeconfig
    file:
      path: /home/vagrant/.kube
      state: directory

  - name: Generate kubectl completion file for bash
    command: kubectl completion bash
    register: bash_completion

  - name: Save completion file to disk
    copy:
      content: "{{ bash_completion.stdout }}"
      dest: /home/vagrant/.kube/completion.bash.inc

  - name: Source kubectl completion in .bashrc
    lineinfile:
      path: /home/vagrant/.bashrc
      line: source '/home/vagrant/.kube/completion.bash.inc'

- name: Initialize kubernetes
  hosts: master
  become: true
  become_user: root

  tasks:
  - name: Initialize kubernetes
    command: kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address 192.168.2.100
    args:
      creates: /etc/kubernetes/admin.conf

  - name: Copy admin config to vagrant user's kubeconfig
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      remote_src: true
      owner: vagrant
      group: vagrant

  - name: Untaint master
    become_user: vagrant
    command: kubectl taint nodes --all node-role.kubernetes.io/master-
    ignore_errors: true

  - name: Install kompose
    get_url:
      url: https://github.com/kubernetes/kompose/releases/download/v1.16.0/kompose-linux-amd64
      dest: /usr/local/bin/kompose
      mode: 0755

- name: Set the kubelet node ip
  hosts: all
  become: true
  become_user: root

  tasks:
  - name: Get the ip address shared with the virtualbox host
    shell: "ifconfig | grep 192.168.2 | cut -d: -f2 | awk '{print $1}'"
    register: ip_address

  - name: Set the right ip address for the kubelet
    lineinfile:
      path: /etc/default/kubelet
      regexp: '^KUBELET_EXTRA_ARGS='
      line: 'KUBELET_EXTRA_ARGS=--node-ip={{ ip_address.stdout }}'

  - name: Reload daemon configuration
    command: systemctl daemon-reload

  - name: Restart the kubelet
    command: systemctl restart kubelet

- name: Setup calico services
  hosts: master

  tasks:
  - name: Install an ETCD server for calico
    command: kubectl apply -f https://docs.projectcalico.org/v3.2/getting-started/kubernetes/installation/hosted/etcd.yaml

  - name: Create Calico ClusterRole
    become_user: vagrant
    command: kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/rbac-kdd.yaml

  - name: Run calico in the cluster
    become_user: vagrant
    command: kubectl apply -f https://docs.projectcalico.org/v3.1/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml

- name: Setup MetalLB
  hosts: master

  tasks:
  - name: Apply MetalLB manifest
    command: kubectl apply -f https://raw.githubusercontent.com/google/metallb/v0.7.3/manifests/metallb.yaml

  - name: Copy MetalLB configmap to VM
    copy:
      src: manifests/metallb-configmap.yml
      dest: /home/vagrant/metallb-configmap.yml

  - name: Apply MetalLB configmap
    command: kubectl apply -f /home/vagrant/metallb-configmap.yml

- name: Setup calico node
  hosts: all
  become: true
  become_user: root

  tasks:
  - name: Download calico binary
    get_url:
      url: https://github.com/projectcalico/cni-plugin/releases/download/v2.0.6/calico
      dest: /opt/cni/bin/calico
      mode: 0755
  - name: Download calico-ipam binary
    get_url:
      url: https://github.com/projectcalico/cni-plugin/releases/download/v2.0.6/calico-ipam
      dest: /opt/cni/bin/calico-ipam
      mode: 0755
  - name: Download calicoctl binary
    get_url:
      url: https://github.com/projectcalico/calicoctl/releases/download/v2.0.6/calicoctl
      dest: /opt/cni/bin/calicoctl
      mode: 0755
  - name: Starting calico node
    shell: ETCD_ENDPOINTS=http://10.0.2.15:2379 /opt/cni/bin/calicoctl node run --node-image=quay.io/calico/node:v3.0.8
    ignore_errors: true

- name: Install Helm
  hosts: master
  become: true
  become_user: root

  tasks:
  - name: Download Helm
    unarchive:
      src: https://storage.googleapis.com/kubernetes-helm/helm-v2.11.0-linux-amd64.tar.gz
      dest: /tmp
      remote_src: true

  - name: Copy helm binary to /usr/local/bin
    copy:
      src: /tmp/linux-amd64/helm
      dest: /usr/local/bin/helm
      mode: 0755
      remote_src: true

  - name: Initialize helm
    become_user: vagrant
    command: helm init

- name: Next step notification
  hosts: minion

  vars:
    message: |
      There's one more thing left to do! You need to make your minion join the cluster.
      Run this command (Please, remove the extra backslashes added by ansible to the double quotes):
         vagrant ssh minion -c "sudo `vagrant ssh master -c 'sudo kubeadm token create --print-join-command'`"

  tasks:
  - name: Post install message
    debug:
      msg: "{{ message.split('\n') }}"
